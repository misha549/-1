const swiper = new Swiper('.swiper-container', {
  loop: true,
  centeredSlides: true,
  slidesPerView: 'auto',
  spaceBetween: 10,
  autoplay: {
    delay: 3000,
    disableOnInteraction: false,
  },
  pagination: {
    el: '.swiper-pagination',
    clickable: true
  },
});

function switchTab(button) {
  document.querySelectorAll('.tabs button').forEach(btn => btn.classList.remove('active'));
  button.classList.add('active');
}

let cartTotal = 0;
function updateCartTotal(amount, name) {
  cartTotal += amount;
  localStorage.setItem('cartTotal', cartTotal);
  document.getElementById('cart-total').textContent = `${cartTotal.toLocaleString('ru-RU')} ‚ÇΩ`;

  const cartItems = JSON.parse(localStorage.getItem('cart') || '[]');
  cartItems.push({ name, price: amount });
  localStorage.setItem('cart', JSON.stringify(cartItems));
}

cartTotal = parseInt(localStorage.getItem('cartTotal')) || 0;
document.getElementById('cart-total').textContent = `${cartTotal.toLocaleString('ru-RU')} ‚ÇΩ`;

fetch('—Ç–æ–≤–∞—Ä—ã_–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π.csv')
  .then(res => res.text())
  .then(csvText => {
    const { data } = Papa.parse(csvText, {
      header: true,
      skipEmptyLines: true
    });

    const grouped = {};
    for (const product of data) {
      const group = product['–≥—Ä—É–ø–ø–∞_—Ç–æ–≤–∞—Ä–æ–≤'];
      if (!grouped[group]) grouped[group] = [];
      grouped[group].push(product);
    }

    const container = document.getElementById('product-list');
    for (const group in grouped) {
      const groupBlock = document.createElement('div');
      groupBlock.className = 'product-group';
      groupBlock.innerHTML = `<h2>${group}</h2><div class="product-list"></div>`;

      grouped[group].forEach(product => {
        const card = document.createElement('div');
        card.className = 'product-card';

        const fileName = product['—Ñ–æ—Ç–æ']?.replaceAll('"', '').trim();
        const imagePath = `img/banner2/${fileName}`;
        const price = Number(product['—Ü–µ–Ω–∞']);

        card.innerHTML = `
          <img src="${imagePath}" alt="${product['–Ω–∞–∑–≤–∞–Ω–∏–µ_—Ç–æ–≤–∞—Ä–∞']}">
          <p>${product['–Ω–∞–∑–≤–∞–Ω–∏–µ_—Ç–æ–≤–∞—Ä–∞']}</p>
          <p class="weight">${product['–≥—Ä–∞–º–º–æ–≤–∫–∞']}</p>
          <button onclick="updateCartTotal(${price}, '${product['–Ω–∞–∑–≤–∞–Ω–∏–µ_—Ç–æ–≤–∞—Ä–∞'].replaceAll("'", "\\'")}')">
  üõí ${price.toLocaleString('ru-RU')} ‚ÇΩ
</button>
        `;

        groupBlock.querySelector('.product-list').appendChild(card);
      });

      container.appendChild(groupBlock);
    }
  });

// –ü–æ–¥–∫–ª—é—á–∞–µ–º WebApp SDK Telegram
if (window.Telegram && Telegram.WebApp) {
  Telegram.WebApp.expand(); // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

  const user = Telegram.WebApp.initDataUnsafe?.user;

  if (user) {
    const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');
    const username = user.username || '(–±–µ–∑ username)';
    const id = user.id;

    // –í—Å—Ç–∞–≤–ª—è–µ–º –∏–º—è –≤ input
    document.getElementById("user-name").value = fullName;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    document.getElementById("tg-user-info").innerHTML = `
      üë§ –í—ã –∑–∞—à–ª–∏ –∫–∞–∫ <b>${fullName}</b> (@${username})<br>
      üÜî Telegram ID: <code>${id}</code>
    `;
  } else {
    document.getElementById("tg-user-info").textContent = "–î–∞–Ω–Ω—ã–µ Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã üò¢";
  }
}

